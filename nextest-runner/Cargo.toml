[package]
name = "nextest-runner"
description = "Core runner logic for cargo nextest."
version = "0.47.0"
readme = "README.md"
license = "MIT OR Apache-2.0"
repository = "https://github.com/nextest-rs/nextest"
documentation = "https://docs.rs/nextest-runner"
edition = "2021"
rust-version = "1.70"
# For an example build script that gates by compiler version, see the history for build.rs in this
# directory.

[dependencies]
atomicwrites = "0.4.2"
aho-corasick = "1.1.2"
async-scoped = { version = "0.7.1", features = ["use-tokio"] }
future-queue = "0.3.0"
bytes = "1.5.0"
camino = { version = "1.1.6", features = ["serde1"] }
camino-tempfile = "1.0.2"
# config's "preserve_order" feature is needed for preserving the order of
# setup scripts in .config/nextest.toml.
config = { version = "0.13.3", default-features = false, features = ["toml", "preserve_order"] }
cargo_metadata = "0.18.1"
cfg-if = "1.0.0"
chrono = "0.4.31"
debug-ignore = "1.0.5"
display-error-chain = "0.2.0"
either = "1.9.0"
futures = "0.3.28"
guppy = "0.17.1"
# Used to find the cargo root directory, which is needed in case the user has
# added a config.toml there
home = "0.5.5"
http = "0.2.9"
humantime-serde = "1.1.1"
indent_write = "2.2.0"
indicatif = "0.17.7"
is_ci = "1.1.1"
itertools = "0.11.0"
log = "0.4.20"
rand = "0.8.5"
miette = "5.10.0"
once_cell = "1.18.0"
owo-colors = "3.5.0"
pin-project-lite = "0.2.13"
regex = "1.10.2"
semver = "1.0.20"
serde = { version = "1.0.189", features = ["derive"] }
serde_ignored = "0.1.9"
serde_json = "1.0.107"
serde_path_to_error = "0.1.14"
shell-words = "1.1.0"
smol_str = { version = "0.2.0", features = ["serde"] }
strip-ansi-escapes = "0.2.0"
tar = "0.4.40"
# For cfg expression evaluation for [target.'cfg()'] expressions
target-spec = { version = "3.0.1", features = ["custom", "summaries"] }
target-spec-miette = "0.3.0"
thiserror = "1.0.49"
# For parsing of .cargo/config.toml files
tokio = { version = "1.33.0", features = [
    "fs",
    "io-util",
    "macros",
    "process",
    "rt",
    "rt-multi-thread",
    "signal",
    "sync",
    "time",
] }
toml = "0.8.2"
toml_edit = { version = "0.20.2", features = ["serde"] }
twox-hash = { version = "1.6.3", default-features = false }
zstd = { version = "0.13.0", features = ["zstdmt"] }

###
### Update-related features, optionally enabled
###
mukti-metadata = { version = "0.1.0", optional = true }
# TODO: remove dependency on self_update, build our own thing on top of mukti
self_update = { version = "0.38.0", optional = true, default-features = false, features = [
    "archive-tar",
    "compression-flate2",
] }

nextest-filtering = { version = "0.5.0", path = "../nextest-filtering" }
nextest-metadata = { version = "0.9.2", path = "../nextest-metadata" }
quick-junit = { version = "0.3.3", path = "../quick-junit" }
uuid = { version = "1.4.1", features = ["v4"] }
nextest-workspace-hack = { version = "0.1", path = "../workspace-hack" }
console-subscriber = { version = "0.2.0", optional = true }
unicode-ident = "1.0.12"
unicode-normalization = "0.1.22"
indexmap = { version = "2.0.2", features = ["serde"] }
smallvec = "1.11.1"

[target.'cfg(unix)'.dependencies]
libc = "0.2.149"
nix = { version = "0.27.1", default-features = false, features = ["signal"] }

[target.'cfg(windows)'.dependencies]
# This is needed to get the definition of c_void to be the same as the one in std:
# https://docs.rs/winapi/0.3.9/src/winapi/lib.rs.html#35-37
# Otherwise nextest-runner runs into compilation issues with win32job.
winapi = { version = "0.3.9", features = ["std"] }
windows = { version = "0.48.0", features = [
    "Win32_Foundation",
    "Win32_Globalization",
    "Win32_System_Console",
    "Win32_System_JobObjects",
] }
win32job = "1.0.2"
dunce = "1.0.4"

# Use rustls by default, OpenSSL on platforms where rustls isn't available:
# RISC-V: https://github.com/nextest-rs/nextest/issues/820
# (default features for self_update turns on openssl)
[target.'cfg(not(any(target_arch = "riscv32", target_arch = "riscv64")))'.dependencies]
self_update = { version = "0.38.0", optional = true, default-features = false, features = [
    "rustls",
] }

[target.'cfg(any(target_arch = "riscv32", target_arch = "riscv64"))'.dependencies]
self_update = { version = "0.38.0", optional = true }


[dev-dependencies]
color-eyre = { version = "0.6.2", default-features = false }
duct = "0.13.6"
indoc = "2.0.4"
maplit = "1.0.2"
pathdiff = { version = "0.2.1", features = ["camino"] }
pretty_assertions = "1.4.0"
proptest = "1.3.1"
proptest-derive = "0.4.0"
test-case = "3.2.1"


[[bin]]
name = "passthrough"
path = "test-helpers/passthrough.rs"

[features]
self-update = ["self_update", "mukti-metadata"]
experimental-tokio-console = ["console-subscriber", "tokio/tracing"]
