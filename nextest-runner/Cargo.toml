[package]
name = "nextest-runner"
description = "Core runner logic for cargo nextest."
version = "0.35.0"
readme = "README.md"
license = "MIT OR Apache-2.0"
repository = "https://github.com/nextest-rs/nextest"
documentation = "https://docs.rs/nextest-runner"
edition = "2021"
rust-version = "1.64"
# For an example build script that gates by compiler version, see the history for build.rs in this
# directory.

[dependencies]
atomicwrites = "0.3.1"
aho-corasick = "0.7.20"
async-scoped = { version = "0.7.1", features = ["use-tokio"] }
future-queue = "0.2.2"
bytes = "1.3.0"
camino = { version = "1.1.2", features = ["serde1"] }
config = { version = "0.13.3", default-features = false, features = ["toml"] }
cargo_metadata = "0.15.2"
cfg-if = "1.0.0"
chrono = "0.4.23"
debug-ignore = "1.0.5"
either = "1.8.1"
futures = "0.3.25"
guppy = "0.15.2"
# Used to find the cargo root directory, which is needed in case the user has
# added a config.toml there
home = "0.5.4"
http = "0.2.8"
humantime-serde = "1.1.1"
indent_write = "2.2.0"
indicatif = "0.17.3"
is_ci = "1.1.1"
itertools = "0.10.5"
log = "0.4.17"
rand = "0.8.5"
miette = "5.5.0"
once_cell = "1.17.0"
owo-colors = "3.5.0"
pin-project-lite = "0.2.9"
regex = "1.7.1"
semver = "1.0.16"
serde = { version = "1.0.152", features = ["derive"] }
serde_ignored = "0.1.7"
serde_json = "1.0.91"
serde_path_to_error = "0.1.9"
shell-words = "1.1.0"
smol_str = { version = "0.1.23", features = ["serde"] }
strip-ansi-escapes = "0.1.1"
tar = "0.4.38"
# For cfg expression evaluation for [target.'cfg()'] expressions
target-spec = { version = "1.3.1", features = ["summaries"] }
target-spec-miette = "0.1.0"
tempfile = "3.3.0"
thiserror = "1.0.38"
# For parsing of .cargo/config.toml files
tokio = { version = "1.24.2", features = [
    "io-util",
    "macros",
    "process",
    "rt",
    "rt-multi-thread",
    "signal",
    "sync",
    "time",
] }
toml_edit = { version = "0.17.1", features = ["easy"] }
twox-hash = { version = "1.6.3", default-features = false }
zstd = { version = "0.12.3", features = ["zstdmt"] }

###
### Update-related features, optionally enabled
###
mukti-metadata = { version = "0.1.0", optional = true }
# TODO: remove dependency on self_update, build our own thing on top of mukti
self_update = { version = "0.34.0", optional = true, default-features = false, features = [
    "archive-tar",
    "compression-flate2",
    "rustls",
] }

nextest-filtering = { version = "0.3.0", path = "../nextest-filtering" }
nextest-metadata = { version = "0.8.0", path = "../nextest-metadata" }
quick-junit = { version = "0.3.2", path = "../quick-junit" }
uuid = { version = "1.2.2", features = ["v4"] }
nextest-workspace-hack = { version = "0.1", path = "../workspace-hack" }
console-subscriber = { version = "0.1.8", optional = true }
unicode-ident = "1.0.6"
unicode-normalization = "0.1.22"
indexmap = "1.9.2"

[target.'cfg(unix)'.dependencies]
libc = "0.2.139"
nix = { version = "0.26.2", default-features = false, features = ["signal"] }

[target.'cfg(windows)'.dependencies]
windows = { version = "0.44.0", features = [
    "Win32_Foundation",
    "Win32_Globalization",
    "Win32_System_Console",
    "Win32_System_JobObjects",
] }
win32job = "1.0.2"
dunce = "1.0.3"

[dev-dependencies]
color-eyre = { version = "0.6.2", default-features = false }
duct = "0.13.6"
indoc = "1.0.8"
maplit = "1.0.2"
pathdiff = { version = "0.2.1", features = ["camino"] }
pretty_assertions = "1.3.0"
proptest = "1.0.0"
proptest-derive = "0.3.0"
test-case = "2.2.2"


[[bin]]
name = "passthrough"
path = "test-helpers/passthrough.rs"

[features]
self-update = ["self_update", "mukti-metadata"]
experimental-tokio-console = ["console-subscriber", "tokio/tracing"]
