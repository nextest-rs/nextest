# adapted from https://github.com/taiki-e/cargo-hack/blob/main/.github/workflows/release.yml

name: Publish releases to GitHub
on:
  push:
    tags:
      - '*'

jobs:
  quick-junit-release:
    if: github.repository_owner == 'nextest-rs' && startsWith(github.ref_name, 'quick-junit-')
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: taiki-e/create-gh-release-action@v1
        with:
          prefix: quick-junit
          changelog: quick-junit/CHANGELOG.md
          title: $prefix $version
          branch: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  nextest-filtering-release:
    if: github.repository_owner == 'nextest-rs' && startsWith(github.ref_name, 'nextest-filtering-')
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: taiki-e/create-gh-release-action@v1
        with:
          prefix: nextest-filtering
          changelog: nextest-filtering/CHANGELOG.md
          title: $prefix $version
          branch: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  nextest-metadata-release:
    if: github.repository_owner == 'nextest-rs' && startsWith(github.ref_name, 'nextest-metadata-')
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: taiki-e/create-gh-release-action@v1
        with:
          prefix: nextest-metadata
          changelog: nextest-metadata/CHANGELOG.md
          title: $prefix $version
          branch: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  nextest-runner-release:
    if: github.repository_owner == 'nextest-rs' && startsWith(github.ref_name, 'nextest-runner-')
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: taiki-e/create-gh-release-action@v1
        with:
          prefix: nextest-runner
          changelog: nextest-runner/CHANGELOG.md
          title: $prefix $version
          branch: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cargo-nextest-release:
    if: github.repository_owner == 'nextest-rs' && startsWith(github.ref_name, 'cargo-nextest-')
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: taiki-e/create-gh-release-action@v1
        id: create-gh-release
        with:
          prefix: cargo-nextest
          # The changelog for cargo-nextest is hosted on the website
          changelog: site/src/CHANGELOG.md
          title: $prefix $version
          branch: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      version: ${{ steps.create-gh-release.outputs.version }}

  build-cargo-nextest-binaries:
    name: Build cargo-nextest binaries for ${{ matrix.target }}
    if: github.repository_owner == 'nextest-rs' && startsWith(github.ref_name, 'cargo-nextest-')
    needs:
      - cargo-nextest-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-18.04
          - target: x86_64-unknown-linux-musl
            os: ubuntu-18.04
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-18.04
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: i686-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: cargo-nextest
          # The tag name contains the binary name so just use that.
          archive: $tag-$target
          target: ${{ matrix.target }}
          tar: all
          zip: windows
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_PROFILE_RELEASE_LTO: true
      - name: Set archive output variable
        id: archive-output
        shell: bash
        run: |
          if [[ ${{ matrix.target }} == "x86_64-pc-windows-msvc" || ${{ matrix.target }} == "i686-pc-windows-msvc" ]]; then
            echo "${{ matrix.target }}-tar=${{ github.ref_name }}-${{ matrix.target }}".tar.gz >> $GITHUB_OUTPUT
            echo "${{ matrix.target }}-zip=${{ github.ref_name }}-${{ matrix.target }}".zip >> $GITHUB_OUTPUT
          else
            echo "${{ matrix.target }}-tar=${{ github.ref_name }}-${{ matrix.target }}".tar.gz >> $GITHUB_OUTPUT
          fi
    outputs:
      x86_64-linux-tar: ${{ steps.archive-output.outputs.x86_64-unknown-linux-gnu-tar }}
      x86_64-linux-musl-tar: ${{ steps.archive-output.outputs.x86_64-unknown-linux-musl-tar }}
      aarch64-linux-tar: ${{ steps.archive-output.outputs.aarch64-unknown-linux-gnu-tar }}
      x86_64-windows-tar: ${{ steps.archive-output.outputs.x86_64-pc-windows-msvc-tar }}
      x86_64-windows-zip: ${{ steps.archive-output.outputs.x86_64-pc-windows-msvc-zip }}
      i686-windows-tar: ${{ steps.archive-output.outputs.i686-pc-windows-msvc-tar }}
      i686-windows-zip: ${{ steps.archive-output.outputs.i686-pc-windows-msvc-zip }}

  build-cargo-nextest-binaries-mac:
    name: Build universal cargo-nextest binary for Mac
    if: github.repository_owner == 'nextest-rs'
    needs:
      - cargo-nextest-release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Build release for Mac
        id: build-release
        run: |
          ./scripts/release-mac-build.sh cargo-nextest "${{ github.ref_name }}"
      - uses: svenstaro/upload-release-action@2.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.build-release.outputs.archive-name }}
          tag: ${{ github.ref }}
    outputs:
      mac-tar: ${{ steps.build-release.outputs.archive-name }}

  update-release-meta:
    name: Update release-meta branch
    if: github.repository_owner == 'nextest-rs'
    needs:
      - cargo-nextest-release
      - build-cargo-nextest-binaries
      - build-cargo-nextest-binaries-mac
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download mukti
        run: |
          mkdir -p ~/bin
          curl -LsSf "https://github.com/nextest-rs/mukti/releases/download/mukti-bin-0.6.0/mukti-bin-0.6.0-x86_64-unknown-linux-gnu.tar.gz" \
            | tar xzf - -C ~/bin
      - name: Add release metadata
        run: |
          ~/bin/mukti-bin add-release --version ${{ needs.cargo-nextest-release.outputs.version }} \
            --release-url "https://github.com/nextest-rs/nextest/releases/${{ github.ref_name }}" \
            --archive-prefix "https://github.com/nextest-rs/nextest/releases/download/${{ github.ref_name }}" \
            --archive x86_64-unknown-linux-gnu:tar.gz=${{ needs.build-cargo-nextest-binaries.outputs.x86_64-linux-tar }} \
            --archive x86_64-unknown-linux-musl:tar.gz=${{ needs.build-cargo-nextest-binaries.outputs.x86_64-linux-musl-tar }} \
            --archive aarch64-unknown-linux-gnu:tar.gz=${{ needs.build-cargo-nextest-binaries.outputs.aarch64-linux-tar }} \
            --archive x86_64-pc-windows-msvc:tar.gz=${{ needs.build-cargo-nextest-binaries.outputs.x86_64-windows-tar }} \
            --archive x86_64-pc-windows-msvc:zip=${{ needs.build-cargo-nextest-binaries.outputs.x86_64-windows-zip }} \
            --archive i686-pc-windows-msvc:tar.gz=${{ needs.build-cargo-nextest-binaries.outputs.i686-windows-tar }} \
            --archive i686-pc-windows-msvc:zip=${{ needs.build-cargo-nextest-binaries.outputs.i686-windows-zip }} \
            --archive universal-apple-darwin:tar.gz=${{ needs.build-cargo-nextest-binaries-mac.outputs.mac-tar }}
      - name: Generate netlify redirects
        run: |
          mkdir out-dir
          ~/bin/mukti-bin generate-netlify out-dir \
            --alias linux=x86_64-unknown-linux-gnu:tar.gz \
            --alias linux-musl=x86_64-unknown-linux-musl:tar.gz \
            --alias linux-arm=aarch64-unknown-linux-gnu:tar.gz \
            --alias windows=x86_64-pc-windows-msvc:zip \
            --alias windows-tar=x86_64-pc-windows-msvc:tar.gz \
            --alias windows-x86=i686-pc-windows-msvc:zip \
            --alias windows-x86-tar=i686-pc-windows-msvc:tar.gz \
            --alias mac=universal-apple-darwin:tar.gz \
      - name: Update releases.json on main branch
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions"
          git pull --autostash --rebase origin main
          git add .releases.json
          git commit -m "Update release metadata for ${{ github.ref_name }}"
          git push origin HEAD:main
      - name: Copy releases.json to output dir
        run: |
          cp .releases.json out-dir/releases.json
      - name: Copy static files to output dir
        # Note trailing slash after release-meta-static is important
        run: |
          rsync -avH site/release-meta-static/ out-dir
      - name: Deploy release metadata
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: release-meta
          folder: out-dir
