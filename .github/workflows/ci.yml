on:
  push:
    branches: [ main, auto, canary ]
  pull_request:
    branches:
      - main

name: CI
env:
  RUSTFLAGS: -D warnings
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@c5ed9ba6b7e1bb8aff90d43acd2f0af4990fa57c
      - name: Lint (clippy)
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features --all-targets
      - name: Lint (rustfmt)
        uses: actions-rs/cargo@v1
        with:
          command: xfmt
          args: --check
      - name: Install cargo readme
        uses: baptiste0928/cargo-install@v1
        with:
          crate: cargo-readme
          version: latest
      - name: Run cargo readme
        run: ./scripts/regenerate-readmes.sh
      - name: Check for differences
        run: git diff --exit-code

  build-rustdoc:
    name: Build documentation
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@c5ed9ba6b7e1bb8aff90d43acd2f0af4990fa57c
      - name: Build rustdoc
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --all-features --workspace

  build:
    name: Build and test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        # 1.59 is the MSRV
        rust-version: [ 1.59, stable ]
        # no-default-features means no self-update, all-features means
        # with self-update
        features: [ --no-default-features, --all-features ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust-version }}
          override: true
      - uses: Swatinem/rust-cache@c5ed9ba6b7e1bb8aff90d43acd2f0af4990fa57c
        with:
          # Matrix instances (other than OS) need to be added to this explicitly
          key: ${{ matrix.rust-version }}-${{ matrix.features }}
      - name: Build quick-junit
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --package quick-junit ${{ matrix.features }}
      - name: Build nextest-metadata
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --package nextest-metadata ${{ matrix.features }}
      - name: Build cargo-nextest
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --package cargo-nextest ${{ matrix.features }}
      - name: Build all targets
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-targets ${{ matrix.features }}
      - name: Doctests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --doc ${{ matrix.features }}
      - name: Test with locally built nextest
        uses: actions-rs/cargo@v1
        with:
          command: local-nt
          args: run ${{ matrix.features }} --profile ci
      - name: Install latest nextest release
        uses: taiki-e/install-action@nextest
      - name: Test with latest nextest release
        uses: actions-rs/cargo@v1
        with:
          command: nextest
          args: run ${{ matrix.features }} --profile ci

  test-archive-target-runner:
    name: Test archives with a target runner
    # gcc-mingw-w64-x86-64-win32 requires Ubuntu 22.04
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - name: Install host toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
      - name: Install x86_64-pc-windows-gnu toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-gnu
          profile: minimal
      - uses: Swatinem/rust-cache@c5ed9ba6b7e1bb8aff90d43acd2f0af4990fa57c
      - name: Install wine and gcc-mingw-w64-x86-64-win32
        run: |
          sudo apt-get update
          sudo apt-get install wine gcc-mingw-w64-x86-64-win32
      - name: Build cargo-nextest
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --package cargo-nextest
      - name: Archive test fixtures
        uses: actions-rs/cargo@v1
        with:
          command: local-nt
          args: archive --manifest-path fixtures/nextest-tests/Cargo.toml --target x86_64-pc-windows-gnu --archive-file target/fixture-archive.tar.zst --package cdylib-example --package nextest-derive
      - name: Run test fixtures
        uses: actions-rs/cargo@v1
        env:
          CARGO_TARGET_X86_64_PC_WINDOWS_GNU_RUNNER: wine
        with:
          command: local-nt
          args: run --archive-file target/fixture-archive.tar.zst
