on:
  push:
    branches: [ main, auto, canary ]
  pull_request:
    branches:
      - main

name: CI
env:
  RUSTFLAGS: -D warnings
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
      - name: Lint (clippy)
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features --all-targets
      - name: Lint (rustfmt)
        uses: actions-rs/cargo@v1
        with:
          command: xfmt
          args: --check
      - name: Install cargo readme
        uses: baptiste0928/cargo-install@v1
        with:
          crate: cargo-readme
          version: latest
      - name: Run cargo readme
        run: ./scripts/regenerate-readmes.sh
      - name: Check for differences
        run: git diff --exit-code

  build-rustdoc:
    name: Build documentation
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
      - name: Build rustdoc
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --all-features --workspace

  build:
    name: Build and test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        # 1.62 is the MSRV
        rust-version: [ 1.62, stable ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust-version }}
      - uses: Swatinem/rust-cache@v2
        with:
          # Matrix instances (other than OS) need to be added to this explicitly
          key: ${{ matrix.rust-version }}
      - name: Build quick-junit
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --package quick-junit
      - name: Build nextest-metadata
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --package nextest-metadata
      - name: Build cargo-nextest without self-update
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --package cargo-nextest --no-default-features --features default-no-update
      - name: Build cargo-nextest
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --package cargo-nextest
      - name: Build all targets
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-targets
      - name: Doctests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --doc
      - name: Test with locally built nextest
        uses: actions-rs/cargo@v1
        with:
          command: local-nt
          args: run --profile ci
      - name: Install latest nextest release
        uses: taiki-e/install-action@nextest
      - name: Test with latest nextest release
        uses: actions-rs/cargo@v1
        with:
          command: nextest
          args: run --profile ci

  test-archive-target-runner:
    name: Test archives with a target runner
    # gcc-mingw-w64-x86-64-win32 requires Ubuntu 22.04
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-pc-windows-gnu
      - uses: Swatinem/rust-cache@v2
      - name: Install wine and gcc-mingw-w64-x86-64-win32
        run: |
          sudo apt-get update
          sudo apt-get install wine gcc-mingw-w64-x86-64-win32
      - name: Build cargo-nextest
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --package cargo-nextest
      - name: Archive test fixtures
        uses: actions-rs/cargo@v1
        with:
          command: local-nt
          args: archive --manifest-path fixtures/nextest-tests/Cargo.toml --target x86_64-pc-windows-gnu --archive-file target/fixture-archive.tar.zst --package cdylib-example --package nextest-derive
      - name: Run test fixtures
        uses: actions-rs/cargo@v1
        env:
          CARGO_TARGET_X86_64_PC_WINDOWS_GNU_RUNNER: wine
        with:
          command: local-nt
          args: run --archive-file target/fixture-archive.tar.zst
